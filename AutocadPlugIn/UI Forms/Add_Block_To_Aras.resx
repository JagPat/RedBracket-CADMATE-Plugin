<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        YII=
</value>
  </data>
</root>